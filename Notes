- ok, so we pulled the database folder from our project and put it into this workout log backend file, now we can delete the database
folder and edit the index and package.json files to what we need
- so, we seem to have run into an issue, this workoutlog uses get, post, put, and delete requests already, so how do we get it to render
the home page? wait a minute, the backend doesn't render anything right? we shouldn't need or want to render anything with the backend,
so I think the current code is fine as is?
- if the current backend code is fine, let's create an app for it, so we can test it with our frontend heroku local and put the app
address into the frontend server variable.
-ok, so we needed to add a Procfile, which we had forgot, and download mysql, which downloaded node modules, so we had to add a 
.gitignore file as well, but then we tried it, and the home page gave us a result, and the reset table reset the info, so it seemed to
work
-let's make this an app and set its url as the server URL for the front end page: so the commands are "heroku login -i" "git init"
"git add ." "gi commit -m '[commit message]'", "heroku create" to make app
- our APP ADDRESS is: https://cryptic-dusk-31004.herokuapp.com/ and APP GIT ADDRESS is: https://git.heroku.com/cryptic-dusk-31004.git
- now, we need to do "git push [app git address] master" to deploy files to heroku cloud app
-interesting, so we keep getting CORS rejections from the frontend, and we go look at the assignment files, and we only had the CORS
stuff in the backend, and it's still here, so it should work, we noticed we still have our code for local instead of heroku deployment
in this backend server.js file, so we need to recreate our app, this is the issue with small errors when we can't test it locally, we
have to waste a lot time updating git and creating a new app
-we are getting an "error at JSON pos 0" error, so we're gonna test the backend here, see what each does, and then make sure it works
-wow, it seems like we're going backwards here. we're note even getting a JSON error. When the site tries to call the server, it isn't
working for whatever reason. We changed to server URL to our local host back end, but the connection is refusing, not sure why we can't do this TBH
-ok, so changing from http//localhost to just localhost:5125 seemed to work, however, now we are getting a CORS rejection. ok, so what
if we require CORS and enable CORS for the front end, that should remove the CORS rejection right?
-ok, so is our server working? I mean, we tested the GET request, and it worked, so why can't we request it? Is it just a CORS error?
but the CORS error dissapeared ugh. I mean, our server GET request is working, we've seen it give the response, so why isn't our front
end getting it? it must be a CORS error?
- so let's try to test the backend and get the get request to return normally, and also maybe the reset table get request, ok, so we
are definitely getting an "Internal Server Error" with the backend, so let's test it on local host again, ok yeah, so the local host
looks correct and is returning "{"results":"[]"}", a blank results obj, since the table is empty
- we uploaded it again and still getting internal server error, that's pretty weird, why does it work in local host but not on cloud?
-interesting, so we Google around and it says to check the error logs, and the error logs says, in addition to the "Error: No default engine was specified and no extension was provided." we also have "Error: Handshake inactivity timeout", so we google this second
error and the solutions are to change the timeout property of the mySql to add more time? We also see a console log that says that the get request was received, so the server is getting the GET request from the frontend, but something is going wrong when it's deployed,
but when local host it works? can we do "node server.js" in flip1 so we can see the errors in real time to test?
-for reference, the WORKOUT LOG FRONTEND is: "https://arcane-wildwood-69561.herokuapp.com/"
-ok, we need to get this flip1 server up and see if it works this way, and why or why not
-ok, so we finally were able to set it up to work with the flip server, we forgot that the frontend is hardcoded and doesn't save unless
we git push, so it keeps trying to access the backend server that doesn't work. with that said, with the frontend on the engr site and
the backend with flip1... server, the server does work, and we've also seen it, well, we've actually never seen it on the server site, so we need to do something with the heroku backend site, bc it works on localhost and it works on flip1, does it have something to do
with the way mySQL is set up? let's google "how to set up mySql with heroku" and maybe look at the mysql module in CS290 course?
-looking over a mySQL and heroku tutorial, we see that when we do "heroku create" we can instead do "heroku create [app name]" to name
the app right there (ugh, this would have been useful so our names aren't so random)
-interesting, so in this tutorial, they set up/ use something called "ClearDB" to set up mySQL, which we did not use, so maybe that's what we need to do, there are some additional links we want to read first, and maybe try a second article and see how it's done
-ok, so reading further, it seems like Heroku natively uses Postgres (some other database?), so that's why we need to add the clearDB
addon, bc it allows the mySQL database to work on Heroku
-***alright, so I guess we'll follow the steps from one of the articles and see hwo things go... 1) install the clearDB addon to our app
"heroku addons:create cleardb:ignite" 2) configure mySQL connection "heroku config | grep CLEARDB_DATABASE_URL" which gives us a CLEARDB DATABASE URL, this specific one being : "mysql://ba78fb274f2846:e7c84551@us-cdbr-east-04.cleardb.com/heroku_2502c22c3414591?reconnect=true" then we want to run "heroku config:set DATABASE_URL='[cleardb database url]'". Lol, we initially get a "name is invalid" error bc we forgot the "DATABASE_URL" part of the command (well we didn't notice it) 3) configure node.js to connect clearDB mySQL to Heroku... in our database URL, there are 4 parts of the URL that contains the "username", "password", "host", "database", so we need to set those parameters. For our url 'mysql://ba78fb274f2846:e7c84551@us-cdbr-east-04.cleardb.com/heroku_2502c22c3414591?reconnect=true', "username"= ba78fb274f2846, "password"= e7c84551, "host"= us-cdbr-east-04.cleardb.com and "database"= heroku_2502c22c3414591 ... We need to open our dbcon.js file and update these values (so I guess we remove the old values). Now it says before creating our mySQL table on clearDB, we should update our files on git, so add, commit, push to master